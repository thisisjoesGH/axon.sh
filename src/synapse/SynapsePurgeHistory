SynapsePurgeHistory() {
  Log debug "Got args '$*'"

  if [[ "$1" = "status" ]]; then
    SynapsePurgeHistoryStatus || return 1
    return 0
  fi

  DoPurgeHistory() {
    local request_body
    ReturnRequestBody s_purge_history request_body
    Log debug "Assembled request with method '${s_purge_history_api[method]}', body '$request_body', to be sent to '${s_purge_history_api[path]}'"
    Request "${s_purge_history_api[method]}" "${s_purge_history_api[path]}" "purge_id" "$request_body" || return 1
    echo -e "Purge Job ID: ${key_values[purge_id]}\n"
  }

  CheckLoginStatus || return 1
  CheckServerSupport "${s_purge_history_api[minimum_version]}" || return 1
  DefineSynapseParams

  Log info "Purging history from ${config[homeserver]}"

  read -r -p "Room ID:" input_room_id
    local room_id="$(EncodeUrl "$input_room_id")"
    Log debug "Room ID is '$room_id'"
    s_purge_history_url_params[room_id]="$room_id"
    Log debug "URL 'room_id' param set to '${s_purge_history_url_params[room_id]}'"
  read -r -p "Relative date or timestamp:" input_timestamp
    local timestamp="$input_timestamp"
    GetUnixTimestampMs "timestamp" || return 1
    Log debug "Unix timestamp is '$timestamp'"
    s_purge_history_body_params[purge_up_to_ts]="$timestamp"
  read -r -p "Delete local events? (y/N):" input_delete_local_events
    case "$input_delete_local_events" in
      [yY]|[Yy][Ee][Ss] ) s_purge_history_body_params[delete_local_events]="true";;
      [Nn]|[Nn][Oo]     ) s_purge_history_body_params[delete_local_events]="false";;
    esac

  DefineSynapseEndpoints
  DoPurgeHistory
}
