# Copyright (C) 2022 joe <joe@thisisjoes.site>
# SPDX-License-Identifier: GPL-3.0-only

SynapsePurgeHistory() {
  Log debug "Got args '$*'"

  if [[ "$1" = "status" ]]; then
    SynapsePurgeHistoryStatus "$2" || return 1
    return 0
  fi

  CheckLoginStatus || return 1
  CheckServerSupport "${s_purge_history_api[minimum_version]}" || return 1

  Log info "Purging history from ${config[homeserver]}"

  Read -r -p "Room ID:" input_room_id
    local room_id="$(EncodeUrl "$input_room_id")"
    Log debug "Room ID is '$room_id'"
    s_purge_history_url_params[room_id]="$room_id"
    Log debug "URL 'room_id' param set to '${s_purge_history_url_params[room_id]}'"
  Read -r -p "Relative date or timestamp:" input_timestamp
    local timestamp="$input_timestamp"
    GetUnixTimestampMs "timestamp" || return 1
    Log debug "Unix timestamp is '$timestamp'"
    s_purge_history_body_params[purge_up_to_ts]="$timestamp"
  Read -r -p "Delete local events? (y/N):" input_delete_local_events
    case "$input_delete_local_events" in
      [yY]|[Yy][Ee][Ss] ) s_purge_history_body_params[delete_local_events]="true";;
      [Nn]|[Nn][Oo]     ) s_purge_history_body_params[delete_local_events]="false";;
    esac

  DefineSynapseEndpoints
  local object
  ConstructObject s_purge_history object || return 1

  local -A params=(
    [method]="${s_purge_history_api[method]}"
    [path]="${s_purge_history_api[path]}"
    [data]="$object"
  )
  local response
  Request params response || {
    HandleMatrixError response
    return 1
  }

  local -a keys=(purge_id)
  local -A values
  ProcessResponse response keys values || return 1

  echo -e "Purge Job ID: ${values[purge_id]}\n"
}
