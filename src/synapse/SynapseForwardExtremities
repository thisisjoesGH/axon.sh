# Copyright (C) 2022-2023 joe <joe@thisisjoes.site>
# SPDX-License-Identifier: GPL-3.0-only

SynapseForwardExtremities() {
  Log debug "Got args '$*'"

  if [[ "$1" == "delete" ]]; then
    SynapseDeleteForwardExtremities "$2" || return 1
    return 0
  fi

  local room="$1"

  # copy api map to local map
  local -A api
  CopyArray s_forward_extremities_api api
  # copy url parameters to local map
  local -A url_params
  CopyArray s_forward_extremities_url_params url_params


  CheckLoginStatus || return 1
  CheckServerSupport "${api[minimum_version]}" || return 1

  Log info "Checking forward extremities on ${config[homeserver]}"

  # ask for room ID or alias if not passed
  [[ ! -z "$room" ]] || {
    Read -r -p "Room ID or alias:" input_room
      room="$input_room"
      Log debug "Room is '$room'"
  }
  url_params[room_id_or_alias]="$room"
  Log debug "URL 'room_id_or_alias' param set to '${url_params[room_id_or_alias]}'"

  SetPathParameters url_params api[path]

  # set request parameters
  local -A params=(
    [method]="${api[method]}"
    [path]="${api[path]}"
  )
  # make request
  local response
  Request params response || {
    HandleMatrixError response
    return 1
  }

  # get key values
  local -a keys=(results count)
  local -A values
  ProcessResponse response keys values || return 1

  # output
  echo -e "Forward extremities:\n${values[results]}"
  echo "Count: ${values[count]}"
}
