# Copyright (C) 2022-2023 joe <joe@thisisjoes.site>
# SPDX-License-Identifier: GPL-3.0-only

SynapseDeleteRoom() {
  Log debug "Got args '$*'"

  if [[ "$1" = "status" ]]; then
    SynapseDeleteRoomStatus "$2" || return 1
    return 0
  fi

  # copy api map to local map
  local -A api
  CopyArray s_delete_room_api api
  # copy url parameters to local map
  local -A url_params
  CopyArray s_delete_room_url_params url_params
  # copy body parameters to local map
  local -A body_params
  CopyArray s_delete_room_body_params body_params

  CheckLoginStatus || return 1
  CheckServerSupport "${api[minimum_version]}" || return 1

  Log info "Deleting room from ${config[homeserver]}"

  # input
  Read -r -p "Room ID:" input_room_id
    Log debug "Room ID is '$input_room_id'"
    url_params[room_id]="$input_room_id"
    Log debug "URL 'room_id' param set to '${url_params[room_id]}'"
  Read -r -p "Block users from rejoining the room? (y/N):" input_block_user_joins
    case "$input_block_user_joins" in
      [yY]|[Yy][Ee][Ss] ) body_params[block]="true";;
      [Nn]|[Nn][Oo]     ) body_params[block]="false";;
    esac
  Read -r -p "Purge all events? (y/N):" input_purge_events
    case "$input_purge_events" in
      [yY]|[Yy][Ee][Ss] ) body_params[purge]="true";;
      [Nn]|[Nn][Oo]     ) body_params[purge]="false";;
    esac
  Read -r -p "Move removed users to new room? (y/N):" input_move_users
    case "$input_move_users" in
      [yY]|[Yy][Ee][Ss] )
        Read -r -p "New room user name:" input_new_room_user
          body_params[new_room_user_id]="$input_new_room_user"
        Read -r -p "New room name:" input_room_name
          body_params[room_name]="$input_room_name"
        Read -r -p "New room message:" input_message
          body_params[message]="$input_message"
      ;;
      [Nn]|[Nn][Oo]|*   ) ;;
    esac

  SetPathParameters url_params api[path]

  # construct request body
  local object
  ConstructObject s_delete_room body_params object || return 1

  # set request parameters
  local -A params=(
    [method]="${api[method]}"
    [path]="${api[path]}"
    [data]="$object"
  )
  # make request
  local response
  Request params response || {
    HandleMatrixError response
    return 1
  }

  # get key values
  local -a keys=(delete_id)
  local -A values
  ProcessResponse response keys values || return 1

  # output
  echo -e "Deletion Job ID: ${values[delete_id]}\n"
}
