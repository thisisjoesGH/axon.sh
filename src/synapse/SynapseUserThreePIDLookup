# Copyright (C) 2022-2023 joe <joe@thisisjoes.site>
# SPDX-License-Identifier: GPL-3.0-only

SynapseUserThreePIDLookup() {
  Log debug "Got args '$*'"

  local medium="$1"
  local address="$2"

  # copy api map to local map
  local -A api
  CopyArray s_user_threepid_lookup_api api
  # copy url parameters to local map
  local -A url_params
  CopyArray s_user_threepid_lookup_url_params url_params

  CheckLoginStatus || return 1
  CheckServerSupport "${api[minimum_version]}" || return 1

  Log info "Looking up user by 3PID on ${config[homeserver]}"

  # input
  # ask for medium if not passed
  [[ ! -z "$medium" ]] || {
  local input_medium
  Read -r -p "Medium:" input_medium
    medium="$input_medium"
  }
  # ask for address if not passed
  [[ ! -z "$address" ]] || {
  local input_address
  Read -r -p "Address:" input_address
    address="$input_address"
  }
  url_params[medium]="$medium"
  Log debug "URL 'medium' param set to '${url_params[medium]}'"
  url_params[address]="$address"
  Log debug "URL 'address' param set to '${url_params[address]}'"

  SetPathParameters url_params api[path]

  # set request parameters
  local -A params=(
    [method]="${api[method]}"
    [path]="${api[path]}"
  )
  # make request
  local response
  Request params response || {
    HandleMatrixError response
    return 1
  }

  # get key values
  local -a keys=(user_id)
  local -A values
  ProcessResponse response keys values || return 1

  # output
  echo -e "Associated user:\n${values[user_id]}"
}
