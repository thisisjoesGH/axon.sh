# Copyright (C) 2021-2022 joe <joe@thisisjoes.site>
# SPDX-License-Identifier: GPL-3.0-only

MatrixLogin() {
  Log debug "Got args '$*'"

  local input_mxid
  local localpart
  local domainpart
  local homeserver
  while Read -r -p "MXID (@user:example.com):" input_mxid; do
    if [[ ! -z "$input_mxid" ]]; then
      ParseMXID "$input_mxid" localpart domainpart || continue
      config[admin_user]="$localpart"
      config[homeserver]="$domainpart"
      GetWellKnown "$domainpart" homeserver || continue
      ParseServerName "$homeserver" host port
      config[base_url]="$host"
      [[ "$port" ]] && config[port]="$port"
      break
    fi
  done
  if [[ -z "${config[admin_token]}" ]]; then
    local input_password
    while Read -s -r -p "password:" input_password; do
      if [[ ! -z "$input_password" ]]; then
        admin_password="$input_password"
        break
      else
        echo
        Log error "Password required"
      fi
    done
  else
    echo "Access token already present"
    return 0;
  fi
  Read -r -p "$(echo -e -n '\nSave access token to local config file? (y/n)')" input_save_token_pref
    case "$input_save_token_pref" in
      [yY]|[Yy][Ee][Ss] ) config[save_token]="true";;
      [Nn]|[Nn][Oo]     ) config[save_token]="false";;
    esac

  WriteConfiguration
  ReadConfiguration
  GenDeviceId
  Log debug "Save ID preference is '${config[save_id]}'"
  Log debug "Device ID is '${config[device_id]}'"
  WriteConfiguration
  DefineMatrixEndpoints
  DefineMatrixParams

  local object
  ConstructObject m_login object || return 1

  local -A params=(
    [method]="${m_login_api[method]}"
    [path]="${m_login_api[path]}"
    [data]="$object"
  )
  local response
  Request params response || {
    HandleMatrixError response
    return 1
  }

  local -a keys=(access_token)
  local -A values
  ProcessResponse response keys values || return 1

  config[admin_token]="${values[access_token]}"
  WriteConfiguration
}
