# Copyright (C) 2021-2022 joe <joe@thisisjoes.site>
# SPDX-License-Identifier: GPL-3.0-only

Help() {
  case "$@" in
    login   ) echo 'Logs in to an account on a homeserver.';;
    logout  ) echo 'Logs out of the currently logged in account';;
    whoami  ) echo 'Prints the MXID of the currently logged in account';;
    version ) echo 'Prints the axon.sh version.';;
    help    ) echo 'ðŸ˜­ðŸ˜­ðŸ˜­';;
    exit    ) echo 'Exits axon.sh.';;
    server      ) echo 'Usage: server <subcommand>'
                  echo '  Subcommands:'
                  echo '    version    Prints version information returned by the locally configured homeserver.'
                  echo '    address    Prints the address of the locally configured homeserver.'
                  echo '    notice     Sends a server notice to a user. Requires proper homeserver configuration.'
                  echo '    reports [limit]'
                  echo '      Gets event reports.'
                  echo '      Optional arguments:'
                  echo '        [limit] The maximum number of event reports to retrieve at once. Skips user prompt if passed.'
                  echo '                If there are more total events than the limit set the results will be paginated.'
                ;;
    destination ) echo 'Usage: destination <subcommand>'
                  echo '  Subcommands:'
                  echo '    details    Prints federation details about the given destination. Destination is a homeserver name.'
                  echo '    reset      Resets the timeout for the given federation destination. Destination is a homeserver name.'
                ;;
    room        ) echo 'Usage: room <subcommand>'
                  echo '  Subcommands:'
                  echo '    purge [status]'
                  echo '      Purges events from a room up to the given date or timestamp. Optionally includes local events.'
                  echo '      Optional arguments:'
                  echo '        [status]  Gets the status of the given purge job ID.'
                  echo
                  echo '    delete [status]'
                  echo '      Forces all local users to leave a room. Optionally deletes all events and blocks future joins.'
                  echo '      Optional arguments:'
                  echo '        [status]  Gets the status of the given deletion job ID.'
                  echo
                  echo '    extremities [delete] [alias or ID]'
                  echo '      Returns forward extremities for the given room alias or ID.'
                  echo '      Optional arguments:'
                  echo '        [delete]       Deletes forward extremities if passed.'
                  echo '        [alias or ID]  The room alias or ID.'
                  echo
                  echo '    alias [create or delete] [alias] [room ID]'
                  echo '      Resolves the given room alias to a room ID and lists all participating homeservers.'
                  echo '      Optional arguments:'
                  echo '        [create]   Creates an alias if passed.'
                  echo '        [delete]   Deletes an alias if passed.'
                  echo '        [alias]    The room alias to resolve, create, or delete. Skips user prompt if passed.'
                  echo '        [room ID]  The room ID to bind the new alias to. Only applies if [create] and [alias] are also passed.'
                ;;
    user        ) echo 'Usage: user <subcommand>'
                  echo '  Subcommands:'
                  echo '    create        Creates a new user.'
                  echo '    password      Resets a user'\''s password. Optionally logs the user out of all devices.'
                  echo '    deactivate    Deactivates a user. Optionally erases the user'\''s profile.'
                  echo '    shadowban     Shadowbans a user.'
                  echo '    rooms         Shows all rooms a user is currently a member of.'
                  echo '    threepid [medium] [address]'
                  echo '      Returns the MXID of the user associated with the given third-party ID (3PID).'
                  echo '      Optional arguments:'
                  echo '        [medium]   The medium of the 3PID, e.g. `email`.'
                  echo '        [address]  The address of the 3PID, e.g. `user@example.com`.'
                  echo '    ratelimit [set or delete] [username] [messages per second] [burst count]'
                  echo '      Returns the ratelimit override for the given user.'
                  echo '      Optional arguments:'
                  echo '        [set]                  Sets the ratelimit override for the given user.'
                  echo '        [delete]               Deletes the ratelimit override for the given user.'
                  echo '        [username]             The username to return, set, or delete the ratelimit override for. Skips user prompt if passed.'
                  echo '        [messages per second]  The maximum messages per second to allow for the given user.'
                  echo '        [burst count]          The maximum messages sent before the ratelimit is applied.'
                ;;
    config      ) echo 'Usage: config [key] [value]'
                  echo '  Prints all configuration keys and their values when no arguments are given.'
                  echo '  Optional arguments:'
                  echo '    [key]    The name of a configuration option. If no value argument is given, prints the current value.'
                  echo '    [value]  The new value for the given configuration option.'
                ;;
    ''          ) echo 'Usage: <command> [subcommand]'
                  echo '  Commands:'
                  echo '    login          Logs in to an account on a homeserver.'
                  echo '    logout         Logs out of an account on a homeserver.'
                  echo '    whoami         Prints the MXID of the currently logged in account.'
                  echo '    server         Performs homeserver related actions. Takes a subcommand as an option.'
                  echo '    destination    Performs federation destination related actions. Takes a subcommand as an option.'
                  echo '    room           Performs room related actions. Takes a subcommand as an option.'
                  echo '    user           Performs user account related actions.'
                  echo '    config         Prints or modifies the axon.sh configuration.'
                  echo '    version        Prints the axon.sh version.'
                  echo '    help           Prints usage information. Takes another command as an option.'
                  echo '    exit           Exits axon.sh.'
                ;;
    *           ) Log error "Unknown subcommand '$1'. Type 'help' with no options for a list of commands."
                ;;
  esac
}
